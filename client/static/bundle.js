(()=>{"use strict";class e{constructor(t){this.url=t,this.hasConnBeenOpened=!1,this.hasConnBeenClosed=!1,this.cachedReceivedUpdates=[],this.cachedUpdatesToSend=[],this.isOnCreateSet=!1,this.isOnUpdateSet=!1,this.isOnDeleteSet=!1,this.isOnOpenSet=!1,this.isOnCloseSet=!1,this.ws=new WebSocket(t),this.ws.onopen=()=>{this.hasConnBeenOpened=!0,this.isOnOpenSet&&this._onopen(),this.cachedUpdatesToSend.forEach((e=>this.ws.send(JSON.stringify(e)))),this.cachedUpdatesToSend=[]},this.ws.onmessage=t=>{const s=JSON.parse(t.data);(function(t){return"method"in t&&(t.method===e.createMethodString||t.method===e.updateMethodString||t.method===e.deleteMethodString)&&"id"in t&&"item"in t})(s)&&(this.isOnCreateSet&&this.isOnUpdateSet&&this.isOnDeleteSet?this.processUpdate(s):this.cachedReceivedUpdates.push(s))},this.ws.onclose=()=>{this.hasConnBeenClosed=!0,this.isOnCloseSet&&this._onclose()}}processUpdate(t){switch(t.method){case e.createMethodString:this._oncreate(t.item);break;case e.updateMethodString:this._onupdate(t.item);break;case e.deleteMethodString:this._ondelete(t.item)}}create(t){this.craftAndSendUpdateMessage(t,e.createMethodString)}update(t){this.craftAndSendUpdateMessage(t,e.updateMethodString)}delete(t){this.craftAndSendUpdateMessage(t,e.deleteMethodString)}craftAndSendUpdateMessage(e,t){let s={method:t,item:e};void 0!==e.id&&(s.id=e.id),this.hasConnBeenOpened?this.ws.send(JSON.stringify(s)):this.cachedUpdatesToSend.push(s)}set oncreate(e){this._oncreate=e,!this.isOnCreateSet&&this.isOnUpdateSet&&this.isOnDeleteSet&&(this.cachedReceivedUpdates.forEach((e=>this.processUpdate(e))),this.cachedReceivedUpdates=[]),this.isOnCreateSet=!0}set onupdate(e){this._onupdate=e,this.isOnCreateSet&&!this.isOnUpdateSet&&this.isOnDeleteSet&&(this.cachedReceivedUpdates.forEach((e=>this.processUpdate(e))),this.cachedReceivedUpdates=[]),this.isOnUpdateSet=!0}set ondelete(e){this._ondelete=e,this.isOnCreateSet&&this.isOnUpdateSet&&!this.isOnDeleteSet&&(this.cachedReceivedUpdates.forEach((e=>this.processUpdate(e))),this.cachedReceivedUpdates=[]),this.isOnDeleteSet=!0}set onopen(e){this._onopen=e,this.isOnOpenSet=!0,this.hasConnBeenOpened&&e()}set onclose(e){this._onclose=e,this.isOnCloseSet=!0,this.hasConnBeenClosed&&e()}}e.createMethodString="CREATE",e.updateMethodString="UPDATE",e.deleteMethodString="DELETE";let t=null,s=null;window.onload=()=>{t=new e("ws://localhost:8080/livegollection"),s=document.getElementById("console"),t.oncreate=e=>{!function(e){if(void 0===e.info)return;const t=document.createElement("li");t.id=e.id;const i=e.info;t.innerHTML=function(e){return'\n    <div class="card">\n        <div class="avatar">\n            <a href="https://steamcommunity.com/profiles/'+e.SteamID+'/" target="_blank">\n                <img class="avatar_img" src="'+e.AvatarUrl+'">\n            </a>\n        </div>\n        <div>\n            <div class="persona_name">\n                <span>'+n(e.Name)+'</span>\n            </div>\n            <div class="location">'+(""!=e.CountryCode?'<img class="profile_flag" src="https://community.cloudflare.steamstatic.com/public/images/countryflags/'+e.CountryCode+'.gif">':"")+"\n                \n                <span>"+n(e.Location)+'</span>\n            </div>\n            <div class="ip">\n                <span>IP: '+n(e.IP)+" </span>\n            </div>\n        </div>\n    </div>\n    "}(i),s.insertBefore(t,s.firstChild)}(e)},t.onupdate=e=>{},t.ondelete=e=>{}};const n=e=>e.replace(/[&<>'"]/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[e]||e)))})();